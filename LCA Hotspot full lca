import matplotlib.pyplot as plt

# Define consistent colors for each component
color_map = {
    "Electricity Production (HFO)": '#FF5733',
    "Electricity production (Hard Coal)": '#33FF57',
    "Brazing Solder": '#3357FF',
    "IC and Cable production": '#FF33A8',
    "Others": '#A833FF',
    "Iron Nickel Alloy": '#FFC300',
    "Electricity production (Natural gas)": '#FF8C33',
    "Brazing solder production": '#8CFF33',
    "Production of sheet metal": '#338CFF',
    "Transformer Production": '#FF338C',
    "Injection items and foaming chemical": '#33FFA8',
    "Electricity Import": '#A8FF33',
    "label and sticker": '#33A8FF'
}

# All datasets
datasets = {
    "Acidification": ([
        "Electricity Production (HFO)",
        "Electricity production (Hard Coal)",
        "Brazing Solder",
        "IC and Cable production",
        "Others"
    ], [28.70, 17.30, 10.46, 7.60, 35.94]),

    "Photochemical Oxidant Formation": ([
        "Electricity Production (HFO)",
        "Electricity production (Hard Coal)",
        "Iron Nickel Alloy",
        "Brazing Solder",
        "IC and Cable production",
        "Others"
    ], [27.12, 17.10, 11.97, 8.35, 10.07, 25.93]),

    "Climate Change": ([
        "Electricity Production (HFO)",
        "Electricity production (Hard Coal)",
        "Electricity production (Natural gas)",
        "IC and Cable production",
        "Others"
    ], [28.70, 30.78, 21.51, 7.6, 11.41]),

    "Ecotoxicity Fresh Water": ([
        "Brazing solder production",
        "Electricity production (Hard Coal)",
        "Production of sheet metal",
        "IC and Cable production",
        "Transformer Production",
        "Others"
    ], [22.81, 7.81, 7.35, 31.45, 9.88, 20.7]),

    "Ecotoxicity Marine": ([
        "IC and Cable production",
        "Brazing solder production",
        "Production of sheet metal",
        "Electricity production (Hard Coal)",
        "Others"
    ], [25.22, 14.76, 13.06, 17.05, 29.91]),

    "Ecotoxicity Terrestrial": ([
        "Production of sheet metal",
        "Brazing solder production",
        "Iron Nickel Alloy",
        "IC and Cable production",
        "Electricity Production (HFO)",
        "Others"
    ], [21.91, 8.98, 30.91, 9.71, 8.79, 19.7]),

    "Energy Resources: Non Renewable": ([
        "Electricity production (Natural gas)",
        "Electricity production (Hard Coal)",
        "Electricity Production (HFO)",
        "IC and Cable production",
        "Injection items and foaming chemical",
        "Others"
    ], [27.27, 8.98, 17.22, 5.09, 8.89, 32.55]),

    "Eutrophication": ([
        "IC and Cable production",
        "Brazing Solder",
        "Transformer Production",
        "Injection items and foaming chemical",
        "Electricity production (Hard Coal)",
        "Electricity Production (HFO)",
        "Electricity Import",
        "Others"
    ], [19.88, 9.02, 4.20, 9.78, 27.14, 5.12, 6.16, 18.7]),

    "Human Toxicity": ([
        "Brazing Solder",
        "Production of sheet metal",
        "IC and Cable production",
        "Electricity production (Hard Coal)",
        "Electricity production (Natural gas)",
        "Electricity Production (HFO)",
        "Others"
    ], [19.34, 22.32, 20.63, 4.00, 3.56, 3.32, 26.83]),

    "Ozone Depletion": ([
        "Electricity production (Natural gas)",
        "Electricity Production (HFO)",
        "IC and Cable production",
        "label and sticker",
        "Production of sheet metal",
        "Electricity production (Hard Coal)",
        "Others"
    ], [36.87, 14.99, 22.13, 6.90, 19.11])
}

# Plotting
fig, ax = plt.subplots(figsize=(12, 10))

# Create one bar for each dataset
for i, (category, (components, percentages)) in enumerate(datasets.items()):
    bottoms = [0]
    for j in range(len(percentages) - 1):
        bottoms.append(bottoms[j] + percentages[j])

    ax.bar(i, percentages, color=[color_map[comp] for comp in components], width=0.5, bottom=bottoms)

# Adding labels and title
ax.set_title('LCIA Impact Categories (Hotspot(s))', fontsize=14)
ax.set_ylabel('Percentage (%)', fontsize=12)
ax.set_xticks(range(len(datasets)))
ax.set_xticklabels(datasets.keys(), rotation=45, ha="right")
ax.set_ylim(0, 100)

# Adding legend below the chart
unique_components = list(color_map.keys())
handles = [plt.Line2D([0], [0], color=color_map[comp], lw=4) for comp in unique_components]
ax.legend(handles, unique_components, loc='upper center', bbox_to_anchor=(0.5, -0.25), ncol=3)

# Adjust layout to fit legend
plt.tight_layout()
plt.show()
